name: Tests

on:
  push

jobs:

  pre_job:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'never'
          cancel_others: 'true'
          paths_ignore: '["**/README.md"]'

  style:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Check style
      run: |
        python -m pip install nox
        nox -s lint

  build:
    needs: style
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install standard python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install nox
    
    - name: Run unit tests (except GNU/Linux with Python 3.11)
      if: matrix.os != 'ubuntu-latest' || matrix.python-version != 3.11
      run: nox -p "${{matrix.python-version}}" -s unit

    - name: Run unit tests for GNU/Linux with Python 3.11 and generate coverage report
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.11
      run: nox -s coverage

    - name: Upload coverage report
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.11
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Run integration tests
      run: nox -p "${{matrix.python-version}}" -s integration

    - name: Install docs dependencies and run doctests
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.9
      run: nox -s sphinx

    - name: Install dev dependencies and run example tests
      if: matrix.os == 'ubuntu-latest'
      run: nox -p "${{matrix.python-version}}" -s examples